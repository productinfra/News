package snowflake

import (
	"fmt"
	"time"

	"github.com/sony/sonyflake"
)

var (
	sonyFlake     *sonyflake.Sonyflake // Instance
	sonyMachineID uint16               // Machine ID
)

func getMachineID() (uint16, error) { // Return the globally defined machine ID
	return sonyMachineID, nil
}

// Init Must pass the current machine ID
func Init(machineId uint16) (err error) {
	sonyMachineID = machineId
	t, _ := time.Parse("2006-01-02", "2022-02-09") // Initialize a start time
	settings := sonyflake.Settings{                // Generate global configuration
		StartTime: t,
		MachineID: getMachineID, // Specify machine ID
	}
	sonyFlake = sonyflake.NewSonyflake(settings) // Generate sonyflake node with the configuration
	return
}

// GetID Returns the generated ID value
func GetID() (id uint64, err error) { // Get the ID value generated by sonyFlake node
	if sonyFlake == nil {
		err = fmt.Errorf("sony flake not initialized")
		return
	}

	id, err = sonyFlake.NextID()
	return
}
